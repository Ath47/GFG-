Given an array arr of n integers, write a function that returns true if there is a triplet (a, b, c) from the array (where a, b, and c are on different indexes) 
that satisfies a2 + b2 = c2, otherwise return false.

Example 1:

Input:
N = 5
Arr[] = {3, 2, 4, 6, 5}
Output: Yes
Explanation: a=3, b=4, and c=5 forms a pythagorean triplet.


class Solution{
public:
	// Function to check if the
	// Pythagorean triplet exists or not
	bool checkTriplet(int arr[], int n) {
	
	    unordered_set<int> s;
	    for(int i = 0;i<n;i++) s.insert(arr[i]);
	    for(int i = 1;i<=1000;i++) {
	        for(int j = i+1;j<=1000;j++) {
	            int k = i*i + j*j;
	            int p = sqrt(k);
	            if(p*p == k && p <= 1000) {
	                if(s.find(i) != s.end() && s.find(j) != s.end() && s.find(p) != s.end()) return true;
	            }
	        }
	    }
	    return false;


	}
};


Expected Time Complexity: O(n+max(Arr[i])2)
Expected Auxiliary Space: O(max(Arr[i]))

Constraints:
1 <= n <= 105
1 <= arr[i] <= 1000
