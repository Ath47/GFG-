You are given a matrix of dimensions n x m. The task is to perform boundary traversal on the matrix in a clockwise manner.

class Solution
{   
    public:
    //Function to return list of integers that form the boundary 
    //traversal of the matrix in a clockwise manner.
    vector<int> boundaryTraversal(vector<vector<int> > matrix, int n, int m) 
    {
        vector<int> res;
        for(int i = 0; i < m; i++) {
            res.push_back(matrix[0][i]);
        }
        for(int i = 1; i < n - 1; i++) {
            res.push_back(matrix[i][m - 1]);
        }
        if(n == 1) return res;
        
        for(int i = m - 1; i >= 0; i--) {
            res.push_back(matrix[n - 1][i]);
        }
        if(m == 1) return res;
        for(int i = n - 2; i >= 1; i--) {
            res.push_back(matrix[i][0]);
        }
        return res;
    }
};

Expected Time Complexity: O(N + M)
Expected Auxiliary Space: O(N+M)
