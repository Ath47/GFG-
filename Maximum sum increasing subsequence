Given an array of n positive integers. Find the sum of the maximum sum subsequence of the given array such that the integers in the subsequence are sorted in
strictly increasing order i.e. a strictly increasing subsequence. 

Example 1:

Input: 
N = 5, arr[] = {1, 101, 2, 3, 100} 
Output: 
106
Explanation:
The maximum sum of a increasing sequence is obtained from {1, 2, 3, 100},

class Solution {
public:
    int maxSumIS(int arr[], int n) {
        vector<int>dp(arr, arr + n);
        for (int i = 1; i < n; i++) {
            for(int j = 0; j < i; j++) {
                if(arr[j] < arr[i]) {
                    dp[i] = max(dp[i], dp[j] + arr[i]);
                }
            }
            
        }
        return *max_element(dp.begin(), dp.end());
    }
};

Expected Time Complexity: O(N2)
Expected Auxiliary Space: O(N)
