The problem is to count all the possible paths from top left to bottom right of an MxN matrix with the constraints that from each cell you can either move to right or down.

Return answer modulo 109+7.

Example 1:

Input:
M = 3 and N = 3
Output: 6
Explanation:
Let the given input 3*3 matrix is filled 
as such:
A B C
D E F
G H I
The possible paths which exists to reach 
'I' from 'A' following above conditions 
are as follows:ABCFI, ABEHI, ADGHI, ADEFI, 
ADEHI, ABEFI

class Solution
{
    public:
    int mod = 1e9 + 7;
    long long helper(long long a, long long b) {
        long long res = 1;
        while(b) {
            if(b & 1) (res *= a) %= mod;
            b >>= 1;
            (a *= a) %= mod;
        }
        return res % mod;
    }
    
    long long  numberOfPaths(int M, int N) {
        long long res = 1;
        for(long long i = N; i < N + M - 1; i++) {
            (res *= i) %= mod;
        }
        long long ans = 1;
        for(long long i = 1; i < M; i++) {
            (ans *= i) %= mod;
        }
        return ((res % mod) * ((helper(ans, mod - 2)) % mod)) % mod;
    }
};

Expected Time Complexity: O(M)
Expected Space Complexity: O(1)

Constraints:
1 ≤ N ≤ 108
1 ≤ M ≤ 105
