Given an array arr[] of n positive integers. Push all the zeros of the given array to the right end of the array while maintaining the order of non-zero elements.
Do the mentioned change in the array in-place.

Example 1:

Input:
N = 5
Arr[] = {3, 5, 0, 0, 4}
Output: 3 5 4 0 0
Explanation: The non-zero elements
preserve their order while the 0
elements are moved to the right.

class Solution{
public:
	void pushZerosToEnd(int arr[], int n) {
	    int zeroIndex = -1;
	    for(int i = 0; i < n; i++) {
	        if(arr[i] == 0) {
	            zeroIndex = i;
	            break;
	        }
	    }
	    if(zeroIndex == -1) return;
	    
	    for(int i = zeroIndex; i < n; i++) {
	        if(arr[i] != 0) {
	            swap(arr[i], arr[zeroIndex]);
	            zeroIndex++;
	        }
	    }
	}
};

Expected Time Complexity: O(n)
Expected Auxiliary Space: O(1)

Constraints:
1 ≤ N ≤ 105
0 ≤ arri ≤ 105

