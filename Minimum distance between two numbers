You are given an array a, of n elements. Find the minimum index based distance between two distinct elements of the array, x and y. Return -1, if either x or y 
does not exist in the array.

Example 1:

Input:
N = 4
A[] = {1,2,3,2}
x = 1, y = 2
Output: 1
Explanation: x = 1 and y = 2. There are
two distances between x and y, which are
1 and 3 out of which the least is 1.


class Solution{
  public:
    int minDist(int a[], int n, int x, int y) {
        int idx1 = -1,idx2 = -1,res = 1e9;
        for(int i = 0; i<n ; i++){
            if(a[i]==x)  idx1 = i;
            if(a[i]==y)  idx2 = i;
            if(idx1>-1 and idx2>-1)  res = min( res,abs(idx2-idx1) );
        }
        return idx1==-1 or idx2==-1 ? -1 : res;
    }
};


Expected Time Complexity: O(N)
Expected Auxiliary Space: O(1)

Constraints:
1 <= n <= 105
0 <= a[i], x, y <= 105
x != y
